#!/bin/bash -eu
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# create yaml
mako-render $CI_SCRIPTS_PATH/shoot-manifest.yaml.template > $CI_SCRIPTS_PATH/shoot-manifest.yaml

# deploy shoot
kubectl apply -f $CI_SCRIPTS_PATH/shoot-manifest.yaml

# wait for shoot
max_retry_time=1800
retry_stop=$(($(date +%s) + max_retry_time))
success=false
while [[ $(date +%s) -lt $retry_stop ]]; do
    sleep 20
    if [ $(kubectl -n garden-shoot get shoot shoot-test -o json | jq -r ".status.conditions[0].status") = "True" ] && \
    [ $(kubectl -n garden-shoot get shoot shoot-test -o json | jq -r ".status.conditions[1].status") = "True" ] && \
    [ $(kubectl -n garden-shoot get shoot shoot-test -o json | jq -r ".status.conditions[2].status") = "True" ]; then
        success=true
        break;
    fi
    echo "Shoot not up yet. Waiting ..."
done
if ! $success; then
    fail "Shoot did not come up within $max_retry_time seconds!"
fi

echo "Shoot is up!"

# so that the shoot is not immediately deleted
sleep 30